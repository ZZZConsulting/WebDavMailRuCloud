# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
  tags:
    include:
    - '1.*'
    - '2.*'

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  artifactNetCoreName: 'WebDAVCloudMailRu-$(Build.SourceBranchName)-dotNetCore31.zip'
  artifactNetFrameworkName: 'WebDAVCloudMailRu-$(Build.SourceBranchName)-dotNet48.zip'
  artifactMonoName: 'WebDAVCloudMailRu-$(Build.SourceBranchName)-dotNet48.zip'
  artifactNet5Name: 'WebDAVCloudMailRu-$(Build.SourceBranchName)-dotNet5.zip'
  artifactNet6Name: 'WebDAVCloudMailRu-$(Build.SourceBranchName)-dotNet6.zip'
  artifactNet7WinName: 'WebDAVCloudMailRu-$(Build.SourceBranchName)-dotNet7Win.zip'

steps:
- task: NuGetToolInstaller@1  
  inputs:  
    checkLatest: true

#=============================================================================================================

- task: VSBuild@1
  displayName: .NET Build
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    vsVersion: 'latest'
    msbuildArgs: '/t:"Restore;Build" /p:Configuration="Release" /p:Platform="Any CPU" /p:CopyOutputSymbolsToPublishDirectory=false'

- task: Bash@3
  displayName: .NET artifacts clean
  inputs:
    targetType: 'inline'
    script: 'rm WDMRC.Console/bin/Release/net48/*.pdb
    && rm -f WDMRC.Console/bin/Release/net48/Microsoft.*.dll
    && rm -f WDMRC.Console/bin/Release/net48/netstandard.dll'

- task: ArchiveFiles@2
  displayName: .NET artifacts archive to WebDAVCloudMailRu-$(Build.SourceBranchName)-dotNet48.zip
  inputs:
    rootFolderOrFile: 'WDMRC.Console/bin/Release/net48/'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(artifactNetFrameworkName)'
    replaceExistingArchive: true

#=============================================================================================================

- task: DotNetCoreCLI@2
  displayName: .NET Core 3.1 publish
  inputs:
    command: 'publish' 
    projects: 'WDMRC.Console/WDMRC.Console.csproj'
    publishWebProjects: false # Required when command == Publish
    arguments: '--configuration $(BuildConfiguration) --framework netcoreapp3.1'

- task: Bash@3
  displayName: .NETCore copy artifact to WebDAVCloudMailRu-$(Build.SourceBranchName)-dotNetCore31.zip
  inputs:
    targetType: 'inline'
    script: 'cp WDMRC.Console/bin/Release/netcoreapp3.1/publish.zip ''$(Build.ArtifactStagingDirectory)''/$(artifactNetCoreName)'

#=============================================================================================================

- task: DotNetCoreCLI@2
  displayName: .NET 5 publish
  inputs:
    command: 'publish' 
    projects: 'WDMRC.Console/WDMRC.Console.csproj'
    publishWebProjects: false # Required when command == Publish
    arguments: '--configuration $(BuildConfiguration) --framework net5.0'

- task: Bash@3
  displayName: .NET 5 copy artifact to WebDAVCloudMailRu-$(Build.SourceBranchName)-dotNet5.zip
  inputs:
    targetType: 'inline'
    script: 'cp WDMRC.Console/bin/Release/net5.0/publish.zip ''$(Build.ArtifactStagingDirectory)''/$(artifactNet5Name)'

#=============================================================================================================

- task: DotNetCoreCLI@2
  displayName: .NET 6 publish
  inputs:
    command: 'publish' 
    projects: 'WDMRC.Console/WDMRC.Console.csproj'
    publishWebProjects: false # Required when command == Publish
    arguments: '--configuration $(BuildConfiguration) --framework net6.0'

- task: Bash@3
  displayName: .NET 6 copy artifact to WebDAVCloudMailRu-$(Build.SourceBranchName)-dotNet6.zip
  inputs:
    targetType: 'inline'
    script: 'cp WDMRC.Console/bin/Release/net6.0/publish.zip ''$(Build.ArtifactStagingDirectory)''/$(artifactNet6Name)'

#=============================================================================================================

- task: DotNetCoreCLI@2
  displayName: .NET 7Win publish
  inputs:
    command: 'publish' 
    projects: 'WDMRC.Console/WDMRC.Console.csproj'
    publishWebProjects: false # Required when command == Publish
    arguments: '--configuration $(BuildConfiguration) --framework net7.0-windows'

- task: Bash@3
  displayName: .NET 7Win copy artifact to WebDAVCloudMailRu-$(Build.SourceBranchName)-dotNet7Win.zip
  inputs:
    targetType: 'inline'
    script: 'cp WDMRC.Console/bin/Release/net7.0-windows/publish.zip ''$(Build.ArtifactStagingDirectory)''/$(artifactNet7WinName)'

#=============================================================================================================

- task: PowerShell@2
  displayName: Making release.info.json artifact
  inputs:
    targetType: 'inline'
    script: |
      New-Item $(Build.ArtifactStagingDirectory)\release.info.json
      $content = @"
      {
        "version" : "$(Build.SourceBranchName)", 
        "info" : 
        {
          "netcore" : {
            "distrib" : "$(artifactNetCoreName)",
            "runner" : "dotnet",
            "file" : "wdmrc.dll",
            "defaultkeys" : ""
          },
          "netframework" :
          {
            "distrib" : "$(artifactNetFrameworkName)",
            "runner" : "",
            "file" : "wdmrc.exe",
            "defaultkeys" : ""
          },
          "mono" : {
            "distrib" : "$(artifactMonoName)",
            "runner" : "mono",
            "file" : "wdmrc.exe",
            "defaultkeys" : ""
          },
          "net5" : {
            "distrib" : "$(artifactNet5Name)",
            "runner" : "dotnet",
            "file" : "wdmrc.dll",
            "defaultkeys" : ""
          },
          "net6" : {
            "distrib" : "$(artifactNet6Name)",
            "runner" : "dotnet",
            "file" : "wdmrc.dll",
            "defaultkeys" : ""
          },
          "net7Win" : {
            "distrib" : "$(artifactNet7WinName)",
            "runner" : "dotnet",
            "file" : "wdmrc.dll",
            "defaultkeys" : ""
          }
        }
      }
      "@
      Set-Content -Path $(Build.ArtifactStagingDirectory)\release.info.json -Value $content

#=============================================================================================================

- task: GitHubRelease@0
  displayName: Publish artifacts to github
  inputs:
    gitHubConnection: YaRGithubAzure
    repositoryName: '$(Build.Repository.Name)' 
    action: 'create' # Options: create, edit, delete
    target: '$(Build.SourceVersion)' # Required when action == Create || Action == Edit
    tagSource: 'auto' # Required when action == Create# Options: auto, manual


#=============================================================================================================

#- task: CmdLine@2
#  inputs:
#    script: 'tree $(Build.SourcesDirectory) /F'

- task: CmdLine@2
  inputs:
    script: 'tree $(Build.ArtifactStagingDirectory) /F'

- task: CmdLine@2
  inputs:
    script: 'type $(Build.ArtifactStagingDirectory)\release.info.json'

